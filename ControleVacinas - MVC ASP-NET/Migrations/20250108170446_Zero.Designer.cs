// <auto-generated />
using System;
using ControleVacinas___MVC_ASP_NET.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleVacinas___MVC_ASP_NET.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20250108170446_Zero")]
    partial class Zero
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleVacinas___MVC_ASP_NET.Models.ListaDeCadastrosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApagadoUsuarioPadrao")
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataApagado")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose1Covid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose1DifteriaTetano")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose1HepatiteB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose1TripliceViral")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose2Covid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose2DifteriaTetano")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose2HepatiteB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose2TripliceViral")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose3Covid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose3DifteriaTetano")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDose3HepatiteB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDoseAnualInfluenza")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDoseReforco1Covid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDoseReforco2Covid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDoseReforcoDifteriaTetano")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDoseReforcoHepatiteB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDoseUnicaFebreAmarela")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataExameAntiHBS")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumMatricula")
                        .HasColumnType("int");

                    b.Property<string>("ResultadoExameAntiHBS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SituacaoVacinacao")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDoses")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesAplicadas")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesAplicadasCovid")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesAplicadasDifteriaTetano")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesAplicadasExameAntiHBS")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesAplicadasFebreAmarela")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesAplicadasHepatiteB")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesAplicadasInfluenza")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesAplicadasTripliceViral")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesCovid")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesDifteriaTetano")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesExameAntiHBS")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFaltando")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFaltandoCovid")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFaltandoDifteriaTetano")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFaltandoExameAntiHBS")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFaltandoFebreAmarela")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFaltandoHepatiteB")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFaltandoInfluenza")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFaltandoTripliceViral")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesFebreAmarela")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesHepatiteB")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesInfluenza")
                        .HasColumnType("int");

                    b.Property<int?>("TotalDosesTripliceViral")
                        .HasColumnType("int");

                    b.Property<int?>("TotalTiposDeVacinas")
                        .HasColumnType("int");

                    b.Property<int?>("TotalTiposDeVacinasAplicadas")
                        .HasColumnType("int");

                    b.Property<int?>("TotalTiposDeVacinasFaltando")
                        .HasColumnType("int");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ListaDeCadastros");
                });

            modelBuilder.Entity("ControleVacinas___MVC_ASP_NET.Models.ListaDeUsuariosModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ListaDeUsuarios");
                });

            modelBuilder.Entity("ControleVacinas___MVC_ASP_NET.Models.ListaDeCadastrosModel", b =>
                {
                    b.HasOne("ControleVacinas___MVC_ASP_NET.Models.ListaDeUsuariosModel", "Usuario")
                        .WithMany("ListaDeCadastros")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControleVacinas___MVC_ASP_NET.Models.ListaDeUsuariosModel", b =>
                {
                    b.Navigation("ListaDeCadastros");
                });
#pragma warning restore 612, 618
        }
    }
}
